package srm607;
import java.util.*;
import static java.lang.Math.*;
import static java.lang.Integer.*;
import java.io.*;

public class PalindromicSubstringsDiv1 {

	final int INF = Integer.MAX_VALUE / 10;
	final double EPS = 1E-8;
	static PrintStream out = System.out;
	final int MOD = 1000000007;
	
	int N = 0;
	long b = 1;
	Map<Integer, Integer> map = null;
	Set<Integer> set = null;
	List<Integer> list = null;
	double [][] dp = null;
	String S = "";
	char[] cs = null;
	char q = '?';
	double ka = 1.0 / 26;
	public double expectedPalindromes(String[] S1, String[] S2){
		S = "";
		
		for(int i = 0; i < S1.length; i++){
			S += S1[i];
		}
		for(int i = 0; i < S2.length; i++){
			S += S2[i];
		}
		N = S.length();
		dp = new double[N][N];
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				dp[i][j] = -1;
			}
		}
		cs = S.toCharArray();
		
		
		double ans = 0;
		
		for(int i = 1; i <= N; i++){
			for(int j = 0; j + i <= N; j++){
				int l = j;
				int r = j + i - 1;
				
				ans += get(l, r);
			}
		}
		
		return ans;
	}
	
	double get(int l, int r){
		if(l >= r){
			return 1;
		}
		if(dp[l][r] != -1){
			return dp[l][r];
		}
		double a = 1;
		if(cs[l] == q || cs[r] == q){
			a *= ka;
		}
		else if(cs[l] != cs[r]){
			a = 0;
		}
		if(a != 0){
			a *= get(l+1, r-1);
		}
		dp[l][r] = a;
		return a;
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		PalindromicSubstringsDiv1 t = new PalindromicSubstringsDiv1();
		String[] S1 = {"??a?a?aa???????a?????a????a??a???a?aa?????a??a??a?", "aaaa?a?aa?aa???aaa???????aaa?aa?aa??????aa??a?????", "????a?aa??a??a?aa??a???a?aaa??aaa?a????????aaa???a", "???a????aa?a?????a??a??aaa???a?aaa??aaa????a???a??", "a??aa????a?a????a??aa??aaa?a?aa???????aa?aa????a?a", "?????a???a????a??a???a??a?a?????a?????a???a??a??aa", "a?aa?a??aaa?????????a?aaa?????aaa??a?????a?aa??a?a", "?aa??a???a???aa?a?????aa?a?a?a?????a?a???a?a?a??a?", "a?aa???a??a???a??????a??aa?aa??aa??aaaa?????????aa", "a??a????aaaaa????aa?aaa??????????aa?aa??????a???a?", "?a?a??a??aaa????????aaa??a??a??a?a?a??a?aaa??a????", "a??aaa?????aaa?aa?????a??a??????a?a??a???a?aaaa?a?", "?????a????a?a??aa?a??a?aaaaa??aa?a??aa????a?a?aaa?", "???????a?a?aaaa???a?a?a?a???????aa??aa?a?????a?aa?", "??aa???a?aaa????a?aa???aaaa?a?a?????aaaa??????a?a?", "a??a?aa???aa??a???aaaaa?aa?aa?aa??????????????????", "?a???a???a?a?????aa???aa??aa???aa?a??a???aaa???a??", "?aa?a???????aa??aaa????????a???a?????a????aa?aa?a?", "a???aa?????aaaa??aa?aa???aaaa?a?????aaa??a??a??a??", "???aa?aa?a?a???????a??a????a???a?aa???a????a????a?", "???aaa???a????aa?a?aa???a??aa????a????????aa???a??", "a?aa??aa?a?a?a?a??????a??a??a?aaaa???a??????aa?a??", "??a??aa??a?a?a?a?a??a????a???a???a????aa????????a?", "??a??a?a???aaaaa????aa??????a?????aa??a?a??aa?aa??", "?aaa?a??????a??a?a??aa?a?aa??a?aaaaaaa?a?aa????aa?", "aa??a?a?a??????a?a?aaa???aa????a?a?aa???a????a?aaa", "??a?a?aa?a?aa?a??aa?a????a???aa??a?????a??a???a??a", "a???????a??????????aa??a????aaa???a?a?aa????aaaaaa", "??aa?aaaa????a????aaa??????????a???aaaaa??????????", "a???????a?aaa???aa??a??aaa?a????aa???aa??aa?aa????", "??????a???aaa?aaa????????aa?a??a?a?a?aa?aaa?aa???a", "a??a??a???aaa???a??a??aaaa?a?aa?a??a?a?a????aa??aa", "a????a?a?a?aaa?a??a??a??a?a????a?a?aa????a????a?aa", "??a????????????a?a??aa??aa?a?a?a????????aaa?a??a??", "??????????a?aaa?aa?aa?a????a?aaa??aaa???aaa??aa?a?", "aaa???aaa?????a???a??a??a??a??????a????a??????a?a?", "??????a?aa?a?a?????aaaaa????a???a???a??a???aaa?a?a", "?a??a?????a???a???aaaaa?a???aa?aa?aa??a?aa???a???a", "?aa???????aa??aa?a??????aaaa?????a?a??????aa??????", "??aaaaa?a???aa?a?a?????aa?a?????aa????????a??a???a", "????a?a?????a?a?a??????a???aa???a?????a?a??a???a?a", "?aa?aa?a??a?a?aa?a?a??a???a?aa???a??a?????a?a????a", "???????aa???aa?aaaaa????aaaaa?a????aa??a???aa?a???", "aa?a?aaaa?a?aaaaa??a?a?????aa??aaa?a??a?a?aaa?a???", "aa?a????aaa????aa?????????????aa??a?a?a??a??a?a?a?", "???a?a??a?a??aa?a?a?a?????????a?a?a?a???a??a?a????", "?????aa??aa???aaa?a?aa?a?a????a???????a?a?a????a??", "a??aa???aa?a?a??aaa???aaaaaa?a?a?????aa?aa??a?????", "?a????aaa??????a??aa???a?a?a?aaa?a???a?????????aa?", "??aa?aaa????aa????aa???aa????a?aa?aa????a?a????a?a"};
		String[] S2 ={"??a?aa???a?aa??aa????aaaaa?????a????aaaaaa??a?a?a?", "aaaa??aa??a?????aaa??aa?aaaaa??a???????a?a?a???aa?", "??a?a?aa??a????a??a??a?aa????a??a????a???a??aa?a??", "aaaaaa?aa??????????a???a??a???a?????a?a??aa??a???a", "????a?a?a?aa??a??aa?a???????aaa??a???a?a?????a????", "a???a???a????a?aa?aa?aa?aaa??aa??aa?a?a??a?aa?a?a?", "?????????a?aa?a???aaa?a??a??a????????????a??aa??aa", "??a?a?aa???aa?aa??a?a??a??????aaaaa?aa??a??a?a?a??", "a?a?????a??a??a?a?a?a?a????????a????a???a???a?aa??", "aa????????????aa?a?aaa???a????a?aa????aa?aaaaa????", "a????aa??????a?a??a?a???????aa?a?a?a????a?a???a??a", "????aaa????aaaa??aaaa?a???aaaa?a??a??a??aaa???a?a?", "??aa??aa??????a?aaaa?a???a????a?a?a??a??aa??a?aa??", "?a?a??a?aa?a??aa?a??a?a?????a???aa?a??aa??????????", "?aa?aa?a??a?a????a??????aa?a????a???a??????aa?a?a?", "a??a???a???????aa???????a??a???a???aa??aa?aa???a??", "??????????????a??aaa??????????a?a????aa??aaaaa???a", "??????????aaaaa????a?aaa?a??a?a?a?a???a?aa??????a?", "??a???a??????a?????????aaa??a?a??a?????a??aa??aaa?", "a???aa???a?a?????????aa???a?a?aa?a??a????aaa??a???", "?a???aa?a?a?a??aa?a??aa??aaa?aa?a?a?aa??aa?a?a?aaa", "a?a??a?aaa?a???a??a?aaaa??a???a?aa?aa????a?a??a?a?", "a????aa??a?a?a????aa??a??????a??????a?a?a???a??a?a", "?????a????a??a????aa???a?aa?a?aaa???????a?aa????aa", "?a?aa??????????a??a??aa?aa??aaa?a????a?????aa?a???", "a????a????a?????a??a??aa???aaaaaaa?aa??a????a??a??", "a?????aa???a???a??aa???aa???a??a???a??????aa?a?aa?", "aaa???a?aa?aa??????aa?aaa?aaa??a?????a???aa??a??a?", "??a?a?aa?????a??aa?a??a?a????a?a??a?aa??????a?aa??", "a???a?a?aaaa??a?aaaa??aaa?a???a?a????????aaa?aa???", "?aa??a???aa?a??a?aaaaa????a???????aaa?a??????a????", "????????????a?aa??a?a????a?a??a??a???a?a?a???a???a", "aaa???aa?a??aa??a??aaaa??????a???a??aa????aa?aa?a?", "?a??a??a?a???aa?aa?????a???a??a??a?a??a???a???????", "a??aa?aa???a?aaa??aa?aaaa???a?aa???aaaaaa??aa?a?a?", "a????aaa???aa?a??a?????a??a????a??aa?a?a?a???????a", "a??????a??a?????aa????a?????????aa?a???a?a????aaa?", "?aa?a???a?a????a?aa?a??a??a?a?????a???aa???????a??", "?a???a????a?a?a??aa?????aa?a?a?aa?a?aa?a??a?aa?a??", "??a?aa????a?aaaa?a??????a??a????a???????a???a?????", "??aaaa?a????????a?a????aa?aa??a??a?a?aaa??a?????a?", "a??aaa??aaa???aaa??????????aaa?a?a?aa?aa?aa??a???a", "a??aaa??aa??a????a???aaa??a?aaa?a??????a????aaaa??", "?????aa??a??????aa??a??a?aa???aa????a?a?a?a?aa??aa", "?a?a??a??a?aa???aaa???a????a??a???a????a????aa?a?a", "?aaa???aaaaa?aa?aaaa?a???a?a??a?a????a?a?aaaaaa?a?", "???a?aa??a?aaa???aa?a???a?????a??a??aa?a???aaa???a", "??a??a??a??a??a??a??????aa??????a?a?aa??aa?a??a?a?", "a?a????aa???a???aaa?????a??aa?aaaa??a???aaa???????", "a?????aa??a???????a???a?a?a?aa?aaaaa?a??aaaaaa?a??"};
		double r = t.expectedPalindromes(S1, S2);
		out.println(r);
	}

}
